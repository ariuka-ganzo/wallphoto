import cv2
import numpy as np

e1 = cv2.getTickCount()
#a1 <- input
image = cv2.imread('images/a1.jpg',0)

height, width = image.shape

# Extract Sobel Edges
sobel_x = cv2.Sobel(image, cv2.CV_64F, 0, 1, ksize=5)
sobel_y = cv2.Sobel(image, cv2.CV_64F, 1, 0, ksize=5)

cv2.imshow('Original', image)
cv2.waitKey(0)
cv2.imshow('Sobel X', sobel_x)
cv2.imwrite('./output/sobel_x.jpg', sobel_x)

cv2.waitKey(0)
cv2.imshow('Sobel Y', sobel_y)
cv2.imwrite('./output/sobel_y.jpg', sobel_y)

cv2.waitKey(0)
sobel_OR = cv2.bitwise_or(sobel_x, sobel_y)
cv2.imshow('sobel_OR', sobel_OR)
cv2.imwrite('./output/sobel_or.jpg', sobel_OR)

cv2.waitKey(0)
laplacian = cv2.Laplacian(image, cv2.CV_64F)
cv2.imshow('Laplacian', laplacian)
cv2.imwrite('./output/laplacian.jpg', laplacian)

cv2.waitKey(0)
canny = cv2.Canny(image, 50, 120)
cv2.imshow('Canny', canny)

cv2.waitKey(0)
#stack horizontally
res = np.hstack((image,sobel_x,sobel_y,sobel_OR,laplacian, canny))
cv2.imshow('all', res)
cv2.imwrite('./output/all.jpg', res)
cv2.waitKey(0)
e2 = cv2.getTickCount()
time = (e2 - e1)/ cv2.getTickFrequency()

cv2.destroyAllWindows()
